{"version":3,"sources":["components/Header.js","components/GameItem.js","components/GamesList.js","components/Home.js","components/Game.js","components/Router.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","AppBar_default","position","color","Toolbar_default","Link","to","className","Typography_default","variant","mediaStyle","height","paddingTop","backgroundSize","GameItem","gameId","this","props","data","id","_this$props$data","name","minPlayers","maxPlayers","playingTime","age","image","thumbnail","Card_default","CardMedia_default","alt","title","style","CardContent_default","gutterBottom","paddingLeft","Grid_default","container","justify","item","background","padding","component","index_es","titleAccess","top","fontSize","marginLeft","CardActions_default","Button_default","size","concat","link","Component","GamesList","_this","spacing","Object","keys","games","map","key","xs","sm","md","lg","xl","components_GameItem","Home","Fragment","components_GamesList","Game","console","log","_props$data","category","description","backegroundImage","backgroundImage","backgroundImageSrc","src","Divider_default","align","Router","state","getGameById","filter","game","pathId","location","pathname","replace","setState","dataGames","_this2","BrowserRouter","components_Header","Switch","Route","exact","path","render","components_Home","components_Game","App","components_Router","Boolean","window","hostname","match","theme","createMuiTheme","palette","primary","blue","secondary","main","ReactDOM","styles","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f61b46d2.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst Header = () => {\n    return (\n        <AppBar position=\"static\" color=\"primary\">\n            <Toolbar>\n                <Link to={'/'} className=\"not-underline white\">\n                    <Typography variant=\"title\" color=\"inherit\">\n                        Juegos de Mesa\n                    </Typography>\n                </Link>\n            </Toolbar>\n            \n        </AppBar>\n    )\n}\n\nexport default Header;","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport Grid from  '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\n\n//import IconButton from '@material-ui/core/IconButton';\n//import SvgIcon from '@material-ui/core/SvgIcon';\nimport { People, PersonAdd, AccessTime, Share, SupervisorAccount, Visibility } from '@material-ui/icons';\n\nconst pStyle = {\n  display: 'flex'\n}\n\nconst timeStyle = {\n  display: 'inline-flex',\n  float: 'right'\n}\n\nconst playersStyle = {\n  display: 'inline-flex'\n}\n\n// Por defecto, el componente CardMedia es un div con un background image, \n// al darle estos estilos, se logra el efecto de que se vea una parte sola de la imagen de forma rectangular\nconst mediaStyle = {\n  height: 0, \n  // relacion 16:9\n  paddingTop: '56.25%',\n  backgroundSize: 'contain'\n}\n\nclass GameItem extends Component {\n\n    render() {      \n\n        let gameId = this.props.data.id;\n\n        let {          \n          name,\n          minPlayers,\n          maxPlayers, \n          playingTime,\n          age          \n        } = this.props.data;\n        \n        let image = this.props.data.thumbnail;\n        \n\n        return (            \n\n            <Card>\n              <CardMedia                 \n                image={image}\n                alt={name}\n                title={name}                \n                style={mediaStyle}\n              />\n              <CardContent>\n              <Typography variant=\"title\" gutterBottom style={{paddingLeft:7}}>\n                {name}\n              </Typography>\n                \n                <Grid container justify=\"space-between\">\n\n                  <Grid item style={{background:'', padding:8}}>\n                    <Typography component=\"span\">                  \n                      <People titleAccess=\"meaning\" style={{position:'relative', top:5}} /> \n                      <span style={{fontSize:'18px', marginLeft:5}}>\n                         {minPlayers}-{maxPlayers}\n                      </span>                  \n                    </Typography>\n                  </Grid>\n\n                  <Grid item style={{background:'', padding:8}}>\n                    <Typography component=\"span\">                  \n                      <AccessTime titleAccess=\"meaning\" style={{position:'relative', top:5}} />\n                      <span style={{fontSize:'18px', marginLeft:5}} >\n                        {playingTime} min\n                      </span>                  \n                    </Typography>\n                  </Grid>\n\n                  <Grid item style={{background:'', padding:8}}>\n                    <Typography component=\"span\">                  \n                      <SupervisorAccount titleAccess=\"meaning\" style={{position:'relative', top:5}} />\n                      <span style={{fontSize:'18px', marginLeft:5}}>\n                        {age}\n                      </span>                  \n                    </Typography>\n                  </Grid>\n                </Grid>\n                \n                <CardActions>\n\n                  <Grid container justify=\"space-between\">\n                    <Grid item>\n                      <Button size=\"medium\" color=\"primary\">\n                        <Link to={`/games/${gameId}`} className=\"not-underline primary\">\n                          Ver más\n                        </Link>                                      \n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button size=\"small\" color=\"primary\">\n                          <Share link={`/games/${gameId}`} />                        \n                      </Button>\n                    </Grid>\n\n                  </Grid>\n                  \n                </CardActions>\n                \n\n              </CardContent>    \n            </Card>\n        \n\n        );\n    }\n}\n\nexport default GameItem;","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport GameItem from './GameItem';\n\nclass GamesList extends Component {\n\n    render () {        \n        return (            \n            <Grid container spacing={24} style={{padding:24}}>\n                {\n                    Object.keys( this.props.games ).map( key => (                        \n                        <Grid item key={key} xs={12} sm={6} md={4} lg={3} xl={3}>                            \n                            <GameItem data={this.props.games[key]} />\n                        </Grid>\n                    ) )\n                }\n            </Grid>            \n        )\n    }\n\n}\n\nexport default GamesList;","import React, { Component } from 'react';\nimport GamesList from './GamesList';\n\n\nclass Home extends Component {\n\n    render() {\n        return (\n            <React.Fragment>                               \n                <GamesList games={this.props.games} />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Home;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport { People, SupervisorAccount, AccessTime } from '@material-ui/icons';\nimport '../css/Game.css';\n\nconst Game = (props) => {\n\n    console.log(props);\n\n    //return null;\n\n    //let {gameId, name, thumbnail, image, minPlayers, maxPlayers, playingTime, averageRating} = props.data;\n\n    // Por falta del dato, usamos uno cualquiera.\n    //let age = maxPlayers;\n\n    let gameId = props.data.id;\n\n    let {          \n        name,\n        minPlayers,\n        maxPlayers, \n        playingTime,\n        age,\n        category,\n        description          \n    } = props.data;\n    \n    let image = props.data.thumbnail;\n\n    let backegroundImage = props.data.backgroundImage;\n\n    const backgroundImageSrc = {        \n        backgroundImage : `url(${backegroundImage})`        \n    }\n\n\n    return (\n        <React.Fragment>\n            <div className=\"background\" style={backgroundImageSrc}>\n                <div className=\"layer\">                                       \n                </div>\n            </div>\n            <div className=\"paper-container\">                                   \n                <div className=\"avatar\">\n                    <img src={`${image}`} alt={name} />\n                </div>\n                <div className=\"align-center\">                    \n                    <Typography className=\"title-2\" variant=\"h2\" gutterBottom>\n                        {name}\n                    </Typography>                \n                    <Typography variant=\"subtitle1\" gutterBottom>\n                        {category[0]}\n                    </Typography>                    \n                </div>\n                <div className=\"align-center\">\n                    <Grid container justify=\"space-between\" className=\"grid-container\">\n                        <Grid item xs={12} sm={6} md={4} lg={3} xl={3} className=\"grid-item\">\n                            <People fontSize=\"large\" />\n                            <Typography>\n                                {minPlayers}-{maxPlayers} Jugadores\n                            </Typography>                            \n                        </Grid>\n                        <Grid item xs={12} sm={6} md={4} lg={3} xl={3} className=\"grid-item\">      \n                            <AccessTime fontSize=\"large\" />\n                            <Typography>\n                                {playingTime} minutos de juego\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12} sm={6} md={4} lg={3} xl={3} className=\"grid-item\">\n                            <SupervisorAccount fontSize=\"large\" />\n                            <Typography>\n                                A partir de {age} años\n                            </Typography>\n                        </Grid>\n                    </Grid>                \n                </div>\n                <Divider />\n                <div className=\"grid-container\">\n                    <Typography align=\"center\" gutterBottom>\n                    {description}\n                    </Typography>\n                </div>           \n            </div>\n        </React.Fragment>            \n    )\n}\n\nexport default Game;","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from  'react-router-dom';\nimport dataGames from '../data/games.json';\nimport Header from './Header';\nimport Home from './Home';\nimport Game from './Game';\n\nclass Router extends Component {\n\n    state = {\n        games : []\n    }\n    \n    componentWillMount () {\n        this.setState({\n            games : dataGames\n        });\n    }\n\n    getGameById = (games, props) => {\n        let game = games.filter(  game => {\n            let pathId = props.location.pathname.replace('/games/', '');\n            return game.id == pathId;\n        });\n        return game[0];\n    }\n\n    render () {\n        return (\n            \n            // Todo lo que tenga que ver con links o enlaces debe ir dentro del BrowserRouter\n            <BrowserRouter>\n\n                <React.Fragment>\n    \n                    <Header />\n\n                    {/* El Switch permite manejar todas las Rutas que tengamos en el proyecto */}\n                    <Switch>\n                        \n                        {/* <Route exact path=\"/\" component={Home} /> */}\n                        <Route exact path=\"/\" render={ () => (\n                            <Home games={this.state.games} />\n                        )} />\n                        \n                        <Route exact path=\"/games/:gameId\" render={\n                            (props) => {\n                                let game = this.getGameById(this.state.games, props);                                \n                                return (\n                                    <Game data={game} />\n                                )                        \n                            } \n                        } />                    \n\n                    </Switch>\n\n                </React.Fragment>            \n            \n            </BrowserRouter>\n        )\n    }\n\n}\n\nexport default Router;","import React, { Component } from 'react';\nimport Router from './components/Router';\nimport './css/index.css';\n\nclass App extends Component {\n\n  render () {\n    return (\n        <React.Fragment>          \n          <Router />        \n        </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: blue,\n        secondary: {\n          main: '#ff4081',\n        },\n      }\n});\n\nReactDOM.render(\n    <MuiThemeProvider theme = { theme }>\n        <App />\n    </MuiThemeProvider>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}